absolute size{
    px-size in pixels
}
relative size{
    % - related to size of parent element
    em - relative to parent element
    rem - relative to root element (html)
    vw - viewport width percent
    vh - viewport height percent
}
font{
    line-height - space between two lines
    letter-spacing - space between two letters
    word-spacing - space between two words
    text-align - left, center, right;
    text-decoration - underline, overline, line-through, none;                  // for <a> tag
    text-transform - uppercase, lowercase, capitalize;
}

google fonts{
    go to google fonts and copy the @import and paste it in <style> tag
    now use desired font family it is present in most lower or below the google font screen
}
background-image{
    background-position - top, bottom, left, right or center;
    background-size - cover, contain;
    background-repeat - repeat, repeat-x, repeat-y, no-repeat;
    background-attachment - fixed, scroll;                          // for parralax effect cool
    background-image:gradient(c1,c2),url();                         // cool stuff

}
filter{
    filter:blur(value in %);
    filter:brightness(value in %);
    filter:contrast(value in %);
    filter:grayscale(value in %);
    filter:invert(value in %);
    filter:opacity(value in %);
    filter:saturate(value in %);
    filter:sepia(value in %);
    filter:hue-rotate(value in deg);
}
pseudo-selectors{
    :hover - do something on mouse hover on element
    :active - do something on mouse click on element
    :focus - do something on focus                                          // used in input tag
    :link  - it defines how <a> looks when unvisited
    :visited - it defines how <a> looks when visited
}

display{
    display:block - display as block element takes width and height
    display:inline - display as inline element does not take width and height
    display:inline-block - display as inline block element takes width and height
}

shadow{
    box-shadow: 5px 5px blue, 10px 10px red, 15px 15px green;
    box-shadow: h-shadow v-shadow blur-radius color inset;
    text-shadow: h-shadow v-shadow blur-radius color;
}

* class{
    for providing css class to any html element  we can provide multiple classes separated by space
    ex: <div class="class1 class2 class3">
    now this div will have three classes class1, class2 and class3
}

position{
    relative - allows us to move the respective element to anywhere but its real space is not taken
    absolute - allows us to move the respective element to anywhere but its real space is taken
    fixed - allows us to move the respective element to anywhere but its real space is taken
}

flexbox{
    flex-direction - row, row-reverse, column, column-reverse;
    flex-wrap - wrap, wrap-reverse, nowrap;
    justify-content - flex-start, flex-end, center, space-between, space-around, space-evenly;
    align-items - stretch, flex-start, flex-end, center, baseline;

    element specific:
    
    order - it is applied to specific element to change its order of appearing in flexbox
    align-self - it is applied to specific element to change its position in flexbox in perpendicular direction
    flex-grow - it is applied to specific element to let it grow respective to other elements default 0;
    flex-shrink - it is applied to specific element to let it shrink respective to other elements default 1;
}

grid{
    grid line line used to seprate two rows or columns
    grid track one complete row or column or space between two grid lines
    grid cell one cell in grid

    minmax(minimum size, maximum size) - it is used to set minimum and maximum size of grid cell
    example :-grid-template-column:1fr minmax(200px,1fr) 1fr;
    now middle column can be of minimum 200px and maximum 1fr

    auto-fit - it is used to automatically fit grid cell in grid
    auto-fill - it is used to automatically fill grid cell in grid
     ___________________________
    |________|_________|________|
    |________|_________|________|
    |________|_________|________|
    |________|_________|________|

    element inside grid specific:
    grid-row: 1/3 -> this element will span from grid line 1 to 3 in rows
    grid-column: 1/3 -> this element will span from grid line 1 to 3 in columns

    all flexbox properties also work in it



    grid area{
        go inside every element of grid
        set grid-area = any word or letter

        now inside container grid set each item according to you using
        grid-template-areas:
        "h h h"
        "m m m"
        "f f f";
        use . for empty cell in grid
    }
}

grid-area for shorthanding grid-column , grid-row{
    grid-area: row-start/column-start/row-end/column-end;
} 

:is() - it is used to select multiple elements at once
:not() - it is used to select multiple elements at once skipping some elements


@mdia queries{
    @media screen and (max-width:600px){
        body{
            background-color: red;
        }
    }
}

html{
    scroll-behavior: smooth;
}